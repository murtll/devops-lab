version: '3.9'

volumes:
  postgres_data:
  traefik-certificates:

services:
  gateway:
    image: traefik:v2.8
    command: |
      --log.level=INFO
      --accesslog
      --ping
      --providers.docker.exposedbydefault=false
      --entrypoints.http.address=:80
      --entrypoints.https.address=:443
      --entrypoints.http.http.redirections.entrypoint.to=https
      --entrypoints.https.http.tls.certresolver=myresolver
      --certificatesresolvers.myresolver.acme.email=${ACME_EMAIL}
      --certificatesresolvers.myresolver.acme.storage=/certificates/acme.json
      --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=http
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-certificates:/certificates
    healthcheck:
      test: traefik healthcheck --ping
      interval: 10s
      retries: 5
      timeout: 2s
      start_period: 5s
    logging:
      driver: json-file
      options:
        max-size: 1m

  web:
    image: ${WEB_IMAGE}:${WEB_IMAGE_TAG}
    restart: always
    environment:
      DB_ENGINE: django.db.backends.postgresql
      DB_NAME: ${DB_NAME} 
      DB_USER: ${DB_USER} 
      DB_PASSWORD: ${DB_PASSWORD} 
      DB_HOST: ${DB_HOST} 
      DB_PORT: ${DB_PORT}
    depends_on:
      db:
        condition: service_healthy
    labels:
      traefik.enable: true
      traefik.http.routers.web.rule: 'Host(`${DEPLOY_HOST}`)'
      traefik.http.routers.web.entrypoints: websecure
      traefik.http.routers.web.tls: true
      traefik.http.routers.web.tls.certresolver: myresolver
      traefik.http.services.web.loadBalancer.server.port: 8000
    # healthcheck:
    #   test: wget --no-verbose --tries=1 --spider http://localhost:8000
    #   interval: 10s
    #   retries: 3
    #   timeout: 1s
    #   start_period: 5s
    logging:
      driver: json-file
      options:
        max-size: 10m

  db:
    image: postgres:12.0-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${DB_USER} 
      POSTGRES_PASSWORD: ${DB_PASSWORD} 
      POSTGRES_DB: ${DB_NAME} 
      PGPORT: ${DB_PORT}
      PGDATA: /var/lib/postgresql/data
    expose:
      - ${DB_PORT}
    healthcheck:
      test: pg_isready -d ${DB_NAME}
      interval: 1s
      timeout: 3s
      retries: 5
      start_period: 5s
    logging:
      driver: json-file
      options:
        max-size: 1m